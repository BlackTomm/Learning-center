<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans.xsd">
	
	
	<!-- 关于抽象bean，一旦定义为抽象bean就意味着自身不能被实例化，即无法使用getBean方法获取，
	也不可以被其他bean ref，只能作为被继承的共有属性，其子bean却可以实例化 -->
	
	<bean id="address" class="com.spring.bean.autowired.Address" 
	 	p:city="北京" p:street="安河桥北" abstract="true"></bean>
	 
	<bean id="car" class="com.spring.bean.autowired.Car" 
		p:brand="BMW" p:location="上海" p:price="10000" p:maxSpeed="230"></bean>
	
	
	<!-- 三种常见配置：指定引用bean手动装配； byName:根据bean的名字，有则自动装配；byType：根据bean的类型装配;
	自动装配缺点：1.已定义bean必须都为自动装配；2.只能指定byName与byType一种；-->
	
	<bean id="person1" class="com.spring.bean.autowired.Person" 
		p:name="邓紫棋" p:address-ref="addressCopy" p:car-ref="car"></bean>
	
	<bean id="person2" class="com.spring.bean.autowired.Person" 
		p:name="GEM" p:address-ref="addressCopy" depends-on="car"></bean>
		
	<!-- bean依赖：当指定depends-on后所需bean时，但未定义时将导致NoSuchBeanDefinitionException异常 -->
	<bean id="person3" class="com.spring.bean.autowired.Person" 
		p:name="GEM邓紫棋" autowire="byType"></bean>
	
	<!-- 关于bean的配置，简化来自同一类bean的class等参数重复 -->
	<bean id="addressCopy" parent="address"></bean>
</beans>
